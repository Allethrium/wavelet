# This file aims to build a full bootable decoder ISO with appropriate customizations.

FROM quay.io/fedora/fedora-bootc:40

# Install 3rd party repositories, refresh and update all
RUN	dnf install -y \
	https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \
	https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm && \
	dnf update --refresh && \
	dnf install --nodocs -y \
	kernel-core kernel-devel kernel-devel-matched kernel-modules kernel-modules-core 
	kernel-headers wget fontawesome-fonts wl-clipboard nnn mako sway bemenu rofi-wayland lxsession sway-systemd waybar \
	foot vim powerline powerline-fonts vim-powerline NetworkManager-wifi iw wireless-regdb wpa_supplicant \
	cockpit-bridge cockpit-networkmanager cockpit-system cockpit-ostree cockpit-podman buildah rdma avahi \
	iwlwifi-dvm-firmware.noarch iwlwifi-mvm-firmware.noarch etcd sha libsrtp libdrm python3-pip srt srt-libs \
	libv4l v4l-utils libva-v4l2-request pipewire-v4l2 ImageMagick intel-opencl mesa-dri-drivers mesa-vulkan-drivers \
	mesa-vdpau-drivers libdrm mesa-libEGL mesa-libgbm mesa-libGL mesa-libxatracker alsa-lib pipewire-alsa alsa-firmware \
	alsa-plugins-speex bluez-tools netcat busybox inotify-tools make cmake dnf yum-utils createrepo dkms usbutils tuned \
	realtime-setup realtime-tests rtkit jo gcc openssl-devel bzip2-devel libffi-devel zlib-devel libuuid-devel libudev-devel \
	gcc gcc-c++ glibc git chkconfig akmods kmod kmod-devel kmodtool intel-media-driver intel-gpu-tools intel-compute-runtime \
	oneVPL-intel-gpu intel-media-driver intel-gmmlib intel-level-zero oneapi-level-zero libvpl intel-mediasdk libva libva-utils \
	libva-v4l2-request libva-vdpau-driver intel-ocloc ocl-icd opencl-headers mpv libsrtp mesa-dri-drivers intel-opencl libvdpau-va-gl \
	mesa-vdpau-drivers libvdpau libvdpau-devel libva-intel-driver ffmpeg ffmpeg-libs libheif-freeworld neofetch htop mesa-libOpenCL \
	python3-pip srt srt-libs firefox ffmpeg vlc libv4l v4l-utils libva-v4l2-request pipewire-v4l2 ImageMagick mplayer libndi \
	libndi-devel ndi-sdk obs-ndi pipewire-utils && \
	ostree container commit
# Clone git repos and get all the packages installed
RUN curl -L https://www.andymelville.net/wavelet/desktopvideo-14.2.1a1.x86_64.rpm -f --retry 5 > "desktopvideo.rpm" && \
	git clone https://github.com/xanview/live555/ && \
	git clone https://github.com/gopro/cineform-sdk && \
	curl -L https://downloads.ndi.tv/SDK/NDI_SDK_Linux/Install_NDI_SDK_v6_Linux.tar.gz -f --retry 5 > "Install_NDI_SDK_v6_Linux.tar.gz" && \
	tar -xzvf Install_NDI_SDK_v6_Linux.tar.gz && \
	yes | PAGER="cat" sh Install_NDI_SDK_v6_Linux.sh && \
	cp -P NDI\ SDK\ for\ Linux/lib/x86_64-linux-gnu/* /usr/local/lib/ && \
	ldconfig && \
	(cd live555; ./genMakefiles linux-with-shared-libraries; cd ..) && \
	(cd live555; make -j "$(nproc)"; make install; cd ..) && \
	(cd cineform-sdk; cmake -DBUILD_TOOLS=OFF && cmake --build . --parallel "$(nproc)" && cmake --install .) && \
	mkdir -p /lib/modules/$DKMS_KERNEL_VERSION && ln -s /lib/modules/$DKMS_KERNEL_VERSION /usr/src/kernels/$DKMS_KERNEL_VERSION && \ 
	dnf install -y desktopvideo.rpm
	ostree container commit
	
# All packages are setup.  Next step should use either anaconda, kickstart or some other customization approach to replicate the ignition file used previously.  This is where the work will be.