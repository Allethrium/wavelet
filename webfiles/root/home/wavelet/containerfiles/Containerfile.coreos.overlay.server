#	This file primarily references the following sources;
#	https://github.com/coreos/layering-examples/blob/main/build-zfs-module/Containerfile
#	https://github.com/coreos/layering-examples/blob/main/replace-kernel/Containerfile
#	https://github.com/coreos/layering-examples
#	https://coreos.github.io/rpm-ostree/layering/
#	https://travier.github.io/rpm-ostree/cliwrap/

# This containerfile builds on the client base image, and adds necessary functionality for the server
# To be applied as an ostree rebase
# The kernel download/install correctly calls dracut to regenerate initramfs.  Manual attempts at this failed (from coreos layering examples)

FROM quay.io/fedora/fedora-coreos:stable
ARG DKMS_KERNEL_VERSION

# Install necessary devel packages in addition to the pre-existing base layer
RUN	rpm-ostree install -y -A \
	buildah butane kea inotify-tools \
	make cmake coreutils binutils binutils-gold libtool gcc gcc-c++ glibc libgcc \
	libstdc++ zlib-ng-compat glibc-devel \
	cpio dkms usbutils openssl openssl-devel \
	autoconf automake libtirpc-devel libblkid-devel libaio-devel libattr-devel \
	elfutils-libelf-devel ncompress libcurl-devel \
	ascii asciidoc go bzip2-devel libffi-devel zlib-devel libuuid-devel \
	libudev-devel chkconfig akmods kmod kmod-devel kmodtool mokutil \
	libsrtp libvdpau-devel firefox ndi-sdk-devel pipewire-utils && \
	ostree container commit

# Define, download, and install host kernel version from Koji build system
RUN KERNEL_VERSION="$(rpm -qa kernel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}')" && echo "\n\nContainer Kernel Version is: ${KERNEL_VERSION}\n\n" && \
	echo -e "\nHost Kernel: ${DKMS_KERNEL_VERSION}\n" && echo -e "\nContainer Kernel: ${KERNEL_VERSION}\n" && if [[ ${DKMS_KERNEL_VERSION} = ${KERNEL_VERSION} ]] ; then echo -e '\nKernel matches!\n' && \
	rpm-ostree install -y kernel-devel-matched; else echo -e '\nKernels do not match, downloading matching host kernel from Koji..\n' && \
	rpm-ostree install -y -A koji && \
	koji download-build --rpm --arch=x86_64 kernel-${DKMS_KERNEL_VERSION} && \
	koji download-build --rpm --arch=x86_64 kernel-core-${DKMS_KERNEL_VERSION} && \
	koji download-build --rpm --arch=x86_64 kernel-devel-${DKMS_KERNEL_VERSION} && \
	koji download-build --rpm --arch=x86_64 kernel-modules-${DKMS_KERNEL_VERSION} && \
	koji download-build --rpm --arch=x86_64 kernel-modules-core-${DKMS_KERNEL_VERSION} && \
	koji download-build --rpm --arch=x86_64 kernel-modules-extra-${DKMS_KERNEL_VERSION} && \
	koji download-build --rpm --arch=x86_64 kernel-devel-matched-${DKMS_KERNEL_VERSION}; fi
	
RUN	rpm-ostree cliwrap install-to-root / && rpm-ostree override replace \
	kernel-${DKMS_KERNEL_VERSION}.rpm \
	kernel-core-${DKMS_KERNEL_VERSION}.rpm \
	kernel-devel-${DKMS_KERNEL_VERSION}.rpm \
	kernel-devel-matched-${DKMS_KERNEL_VERSION}.rpm \
	kernel-modules-${DKMS_KERNEL_VERSION}.rpm \
	kernel-modules-core-${DKMS_KERNEL_VERSION}.rpm \
	kernel-modules-extra-${DKMS_KERNEL_VERSION}.rpm && \
	rm -rf *.rpm && \
	ostree container commit || true

# Module key signing needs much more understanding on my part to get working correctly.
# For now, the driver does at least build.
RUN mkdir -p /usr/lib/blackmagic && mkdir -p /var/lib/blackmagic && \
	mokdir="/usr/lib/blackmagic" && \
	ln -s /usr/lib/blackmagic/MOK.priv /var/lib/blackmagic/MOK.priv && \
	ln -s /usr/lib/blackmagic/MOK.der /var/lib/blackmagic/MOK.der && \
	curl -L https://www.andymelville.net/wavelet/desktopvideo-14.2.1a1.x86_64.rpm -f --retry 5 > "desktopvideo.rpm" && \
	rpm-ostree install -y -A desktopvideo.rpm && \
	ostree container commit