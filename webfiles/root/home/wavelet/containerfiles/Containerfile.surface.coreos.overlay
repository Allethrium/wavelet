#	This file primarily references the following sources;
#	https://github.com/coreos/layering-examples/blob/main/build-zfs-module/Containerfile
#	https://github.com/coreos/layering-examples/blob/main/replace-kernel/Containerfile
#	https://github.com/coreos/layering-examples
#	https://coreos.github.io/rpm-ostree/layering/
#	https://travier.github.io/rpm-ostree/cliwrap/

# This containerfile aims to build all dependencies for Wavelet in a container
# To be applied as an ostree rebase
# This is a variant of the other containerfile which seeks to enable a client device to pull a prebuilt ostree layer with an MS Surface Kernel.

FROM quay.io/fedora/fedora-coreos:stable
ARG DKMS_KERNEL_VERSION
	# Define, download, and install host kernel version from Koji build system
RUN KERNEL_VERSION="$(rpm -qa kernel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}')" && echo "\n\nContainer Kernel Version is: ${KERNEL_VERSION}\n\n" && \
	echo -e "\nHost Kernel: ${DKMS_KERNEL_VERSION}\n" && echo -e "\nContainer Kernel: ${KERNEL_VERSION}\n" && if [[ ${DKMS_KERNEL_VERSION} = ${KERNEL_VERSION} ]] ; then echo -e '\nKernel matches!\n' && \
	rpm-ostree install -y kernel-devel-matched; else echo -e '\nKernels do not match, downloading matching host kernel from Koji..\n' && \
	rpm-ostree install -y -A koji && \
	# Here we'd download the SURFACE kernels from https://github.com/linux-surface/linux-surface
RUN	rpm-ostree cliwrap install-to-root / && rpm-ostree override replace \
	kernel-${DKMS_KERNEL_VERSION}.rpm \
	kernel-core-${DKMS_KERNEL_VERSION}.rpm \
	kernel-devel-${DKMS_KERNEL_VERSION}.rpm \
	kernel-devel-matched-${DKMS_KERNEL_VERSION}.rpm \
	kernel-modules-${DKMS_KERNEL_VERSION}.rpm \
	kernel-modules-core-${DKMS_KERNEL_VERSION}.rpm \
	kernel-modules-extra-${DKMS_KERNEL_VERSION}.rpm && \
	rm -rf *.rpm && \
	ostree container commit || true
	# A surface will never be a server, so we omit unnecessary server-specific packages.
RUN	rpm-ostree install -y -A \
	https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \
    https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm && \
	rpm-ostree install -y \
	wget fontawesome-fonts wl-clipboard nnn mako sway bemenu rofi-wayland lxsession sway-systemd waybar \
	foot vim powerline powerline-fonts vim-powerline perl NetworkManager-wifi iw wireless-regdb wpa_supplicant \
	rdma iwlwifi-dvm-firmware.noarch iwlwifi-mvm-firmware.noarch etcd sha libsrtp libdrm \
	mesa-dri-drivers mesa-vulkan-drivers mesa-vdpau-drivers libdrm mesa-libEGL mesa-libgbm mesa-libGL \
	mesa-libxatracker alsa-lib pipewire-alsa alsa-firmware alsa-plugins-speex netcat busybox inotify-tools \
	tuned realtime-setup realtime-tests rtkit jo openssl ncompress akmods kmod kmod-devel kmodtool \
	intel-media-driver intel-gpu-tools intel-compute-runtime oneVPL-intel-gpu intel-media-driver intel-gmmlib intel-opencl \
    intel-level-zero oneapi-level-zero libvpl intel-mediasdk libva libva-utils libva-vdpau-driver intel-ocloc \
    ocl-icd opencl-headers mpv libsrtp mesa-dri-drivers intel-opencl libvdpau-va-gl mesa-vdpau-drivers libvdpau libvdpau-devel \
    libva-intel-driver ffmpeg ffmpeg-libs libheif-freeworld fastfetch htop mesa-libOpenCL python3-pip srt srt-libs \
    ffmpeg vlc libv4l v4l-utils libva-v4l2-request pipewire-v4l2 ImageMagick mplayer libndi-sdk ndi-sdk ndi-sdk-devel ndi-sdk-documentation pipewire-utils && \
    # don't need to peform manually linking now
	#ln -s /usr/bin/ld.bfd /etc/alternatives/ld && \
	#ln -s /etc/alternatives/ld /usr/bin/ld && \
	ostree container commit
RUN mkdir -p /var/lib/blackmagic && \
	mokdir="/var/lib/blackmagic" && \
	openssl req -nodes -new -x509 -days 3650 -subj '/CN=MOK_generated' -keyout "$mokdir/MOK.priv" -outform der -out "$mokdir/MOK.der" && \
	curl -L https://www.andymelville.net/wavelet/desktopvideo-14.2.1a1.x86_64.rpm -f --retry 5 > "desktopvideo.rpm" && \
	rpm-ostree install -y -A desktopvideo.rpm && \
	ostree container commit